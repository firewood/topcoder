<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>BIT</Title>
      <Shortcut>BIT</Shortcut>
      <Description>BIT</Description>
      <Author>firewood</Author>
    </Header>
    <Snippet>
      <Code Language="cpp">
        <![CDATA[#include <atcoder/fenwicktree>

template<typename T> struct BIT {
	int _size;
	atcoder::fenwick_tree<T> ft;
	BIT(int size) : _size(size), ft(size) { }
	void add(int pos, T value) { ft.add(pos, value); }
	T range_sum(int from, int to) { return ft.sum(from, to); }
	T sum(int pos) { return range_sum(0, pos); }
	int lower_bound(int64_t value) {
		int left = -1, right = _size;
		while (right - left > 1) {
			int mid = (left + right) / 2;
			if (sum(mid + 1) >= value) { right = mid; } else { left = mid; }
		}
		return right;
	}
	void set_all(void) { for (int i = 0; i < _size; ++i) { insert(i); } }
	int size(void) { return int(sum(_size)); }
	void insert(int x) { add(x, 1); }
	void erase(int x) { add(x, -1); }
	int nth_smallest(int rank) { return (rank >= 1 && rank <= size()) ? lower_bound(rank) : -1; }
	int nth_biggest(int rank) { return nth_smallest(_size + 1 - rank); }
};

//BIT<int64_t> bit(N);
//BIT<int64_t> bit(1000002);
]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
